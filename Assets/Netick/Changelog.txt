### [0.9.3] Changelog - 2023/12/27

- Improved heavy packet loss handling. Theoretically, It's possible to receive no packets from the server for an entire day (or more) and be back on track after that stops happening. Without needing to send the full networked world state.
- Improved CSP handling of heavy packet loss. Now the client behaves more expectedly when heavy packet loss (no packets for seconds) occurs.
- Improved CSP performance.
- Improved memory usage on the client.
- Added TransportConnection field to NetworkConnection, which can be used to get the transport connection.
- Fixed an issue with NetworkTransform rotation interpolation.
- Fixed various other issues.

### [0.8.11] Changelog - 2023/12/14

- Changed NetworkSandbox.IsVisiable to NetworkSandbox.IsVisible.
- Changed StartNode.ServerAndClient to StartNode.MultiplePeers.
- Added StartAsMultiplePeers to Netick.Unity.Network. This can be used to start multiple clients (and choose to start a server with them or not) in the same Unity instance. Netick.Unity.Network.StartAsServerAndClient is now marked as obsolete.
- Fixed an issue causing NetworkStart to be called after other callbacks of NetworkBehaviour.
- Fixed an issue causing a removed object to still be in the simulation.
- Fixed an issue causing LiteNetLibTransport to throw an exception when a client wants to connect despite the number of connected clients being MaxPlayers.
- Fixed various other issues.

### [0.8.8] Changelog - 2023/11/30

- Changed the behavior of [OnChanged] methods to act similarly to Netick 1. Now [OnChanged] methods are not called for non-default/inspector values, and only called when the property value changes during runtime.
- Changed the default precision value of network properties to 0.001. This should greatly decrease bandwidth usage. If you don't want any compression, pass -1 to precision parameter of [Networked].
- Fixed an issue with Auto Interpolation when passing a valid precision value to [Networked].
- Fixed various other issues.

### [0.8.6] Changelog - 2023/11/19

- Fixed an issue causing [OnChanged] methods on NetworkArray to not work correctly. 
- Fixed an issue causing network state changes to not be detected if they weren't done in NetworkFixedUpdate.

### [0.8.4] Changelog - 2023/11/17

- Fixed a CodeGen issue with parameterless Rpc methods.
- Fixed a CodeGen issue in Unity +2022 causing "Reference has errors".
- Fixed an issue with NetworkArray when used with a type smaller than 4 bytes, like short, causing incorrect elements to be changed when using the array indexer setter.
- Fixed an issue with NetworkString causing the string to be longer than it should be.
- Fixed an issue with IL2CPP causing build to fail.

### [0.8.2] Changelog - 2023/11/16

- Fixed a desync issue that happens with very heavy packet loss (no packets for +2 seconds).

